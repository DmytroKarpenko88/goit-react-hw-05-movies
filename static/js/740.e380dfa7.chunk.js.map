{"version":3,"file":"static/js/740.e380dfa7.chunk.js","mappings":"4RAmFA,UA3Ee,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,YAAaH,GAEzB,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAsCX,EAAAA,EAAAA,UAASU,GAA/C,eAAOE,EAAP,KAAoBC,EAApB,KAyBMC,EAAS,mCAAG,+FACVC,EAAAA,EAAAA,IAAYL,GAAOM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC/BZ,QAAQC,IAAIW,GACZf,GAAU,OAAIe,GACf,IAJe,2CAAH,qDAcf,OAPAC,EAAAA,EAAAA,YAAU,WACHN,IAGLG,EAAAA,EAAAA,IAAYH,GAAaI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBf,GAAU,OAAIe,GAA/B,GAC/B,GAAE,CAACL,KAGF,4BACE,SAAC,EAAAO,QAAD,mCAEA,kBAAMC,SArCW,SAAAC,GACnBA,EAAEC,iBAEGZ,GANLG,EAAeH,GACfI,KAMES,EAAAA,OAAAA,QAAe,oBAIlB,EA6BG,WACE,mBAAQC,KAAK,SAAb,qBACA,kBAAOA,KAAK,OAAOC,MAAOf,EAAOgB,SA7Bb,SAAAL,GACxB,GAAuB,KAAnBA,EAAEM,OAAOF,MACX,OAAOhB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOW,EAAEM,OAAOF,OAGnC,QA0BG,SAAC,EAAAG,KAAD,UACG3B,EAAO4B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAAC,EAAAC,SAAD,WACE,UAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAMK,MAAO,CAAEC,KAAMjC,GAAlC,WACE,gBACEkC,IAAKL,EAAW,UAAMM,EAAAA,GAAN,OAAgBN,GAAgBO,EAChDC,IAAKT,IAENA,MANUD,EAUlB,QAIR,C","sources":["Pages/Movies.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/api';\nimport { IMG_URL } from 'services/variables';\nimport poster from '../components/Images/movie-background-collage.jpg';\nimport { Heading, Grid, GridItem } from 'components';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  console.log('location:', location);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchQuery, setSearchQuery] = useState(query);\n\n  const onSubmit = () => {\n    setSearchQuery(query);\n    getMovies();\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      Notify.failure('Enter the request');\n      return;\n    }\n    onSubmit(query);\n  };\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n    // const nextParams = name !== '' ? {name} : {};\n    // setSearchParams(nextParams)\n  };\n\n  const getMovies = async () => {\n    await searchMovie(query).then(({ results }) => {\n      console.log(results);\n      setMovies([...results]);\n    });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    searchMovie(searchQuery).then(({ results }) => setMovies([...results]));\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <Heading>Movies ðŸŽ¬</Heading>\n\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <input type=\"text\" value={query} onChange={updateQueryString} />\n      </form>\n      {/* <input type=\"text\" value={query} onChange={updateQueryString} /> */}\n\n      <Grid>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <GridItem key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <img\n                  src={poster_path ? `${IMG_URL}${poster_path}` : poster}\n                  alt={title}\n                />\n                {title}\n              </Link>\n            </GridItem>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","location","useLocation","console","log","useSearchParams","searchParams","setSearchParams","query","get","searchQuery","setSearchQuery","getMovies","searchMovie","then","results","useEffect","Heading","onSubmit","e","preventDefault","Notify","type","value","onChange","target","Grid","map","id","title","poster_path","GridItem","to","state","from","src","IMG_URL","poster","alt"],"sourceRoot":""}