{"version":3,"file":"static/js/740.0c54cfe4.chunk.js","mappings":"mPAoFA,UA/Ee,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,YAAaH,GAEzB,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOU,EAAP,KAAcC,EAAd,KACMC,EAAO,UAAGJ,EAAaK,IAAI,kBAApB,QAAkC,GAqBzCC,EAAoB,SAAAC,GACxB,GAAuB,KAAnBA,EAAEC,OAAOC,MACX,OAAOR,EAAgB,CAAC,GAE1BA,EAAgB,CAAEG,QAASG,EAAEC,OAAOC,OAGrC,EAEKC,EAAS,mCAAG,+FACVC,EAAAA,EAAAA,IAAYP,GAASQ,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjChB,QAAQC,IAAIe,GACZnB,GAAU,OAAImB,GACf,IAJe,2CAAH,qDAgBf,OACE,4BACE,iDAEA,kBAAMC,SA1CW,SAAAP,IACnBA,EAAEQ,iBAEGX,GAIIA,IAZQF,IACfC,EAASD,GACTQ,KAOAM,EAAAA,OAAAA,QAAe,oBAIlB,EAkCG,WACE,mBAAQC,KAAK,SAAb,qBACA,kBAAOA,KAAK,OAAOR,MAAOL,EAASc,SAAUZ,QAE/C,kBAAOW,KAAK,OAAOR,MAAOL,EAASc,SAAUZ,KAE7C,wBACGb,EAAO0B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM9B,GAAlC,WACE,gBAAK+B,IAAKJ,EAAaK,IAAKN,IAC3BA,MAHID,EAOZ,QAIR,C","sources":["Pages/Movies.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  console.log('location:', location);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const movieId = searchParams.get('movieId') ?? '';\n\n  const onSubmit = newQuery => {\n    if (newQuery !== query) {\n      setQuery(query);\n      getMovies();\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!movieId) {\n      Notify.failure('Enter the request');\n      return;\n    }\n    onSubmit(movieId);\n  };\n\n  // filer\n  // const visibleMovies = movies.filter(movie => movie.includes(movieId));\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: e.target.value });\n    // const nextParams = name !== '' ? {name} : {};\n    // setSearchParams(nextParams)\n  };\n\n  const getMovies = async () => {\n    await searchMovie(movieId).then(({ results }) => {\n      console.log(results);\n      setMovies([...results]);\n    });\n  };\n\n  // useEffect(() => {\n  //   if (!query) {\n  //     return;\n  //   }\n  //   // console.log('query', query);\n\n  //   getMovies();\n  // }, [getMovies, query]);\n\n  return (\n    <div>\n      <h2>Movies ðŸŽ¬</h2>\n\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <input type=\"text\" value={movieId} onChange={updateQueryString} />\n      </form>\n      <input type=\"text\" value={movieId} onChange={updateQueryString} />\n\n      <ul>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <img src={poster_path} alt={title} />\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","location","useLocation","console","log","useSearchParams","searchParams","setSearchParams","query","setQuery","movieId","get","updateQueryString","e","target","value","getMovies","searchMovie","then","results","onSubmit","preventDefault","Notify","type","onChange","map","id","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}